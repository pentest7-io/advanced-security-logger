<?php
/**
 * Class WPASL_UrlLogger
 * This class is responsible for logging all the urls being visited.
 */
class WPASL_UrlLogger
{
    /**
     * Function to register this file into plugin bootstrap
     */
    public static function register()
    {
        // front url action handler
        add_action("wp_head",[self::class,'frontUrlLog'],1);

        // back/admin url action handler
        add_action("admin_head",[self::class,'adminUrlLog'],1);

        // function to deal with ip blocking and alert
        add_action("plugins_loaded",[self::class,'preventOrAlert'],1);
    }

    /**
     * Action handler function to log front-end urls
     */
    public static function frontUrlLog()
    {
        // do log trash operation
        self::autoDeleteLog();

        // get logger state
        $log    = get_option('wpasl-front-logging', false);

        // only log when on
        if($log=="1")
        {
            WPASL_DBSchema::insertLog();
        }
    }

    /**
     * Action handler function to log admin urls
     * @return bool
     */
    public static function adminUrlLog()
    {
        // do log trash operation
        self::autoDeleteLog();

        // get logger state
        $log    = get_option('wpasl-admin-logging', false);

        // return if off
        if($log=="0")
        {
            return false;
        }

        // init restricted urls array
        $restrictedLogger = ['wpasl-logs'];

        // check if in array simply bypass logging
        if(isset($_GET["page"]) && in_array($_GET["page"], $restrictedLogger))
        {
            return false;
        }

        // else log url
        WPASL_DBSchema::insertLog(true);
    }

    /**
     * Action handler function to Alert and IP Blocking
     * @return bool
     */
    public static function preventOrAlert()
    {
        // store current accesssed ip
        $curr_ip = $_SERVER["REMOTE_ADDR"];

        // load current url un var
        $curr_url = $_SERVER["REQUEST_URI"];

        // get blocked ips list
        $ips = get_option('wpasl-sus-ips', false);

        // check if blocked ips found
        if($ips)
        {
            // explode blocked ips
            $ips = explode("\r\n", $ips);

            // check if this ip is in blocked ip stop access
            if(in_array($curr_ip, $ips))
            {
                // get login page slug
                $login_slug = get_option('wpasl-login-slug', false);

                if(get_current_user_id()==1)
                {
                    // Nothing ToDo
                    // No restriction for super admin when he/she is logged in even IP is matched.
                }
                else if(strpos($curr_url, $login_slug)!==FALSE)
                {
                    // Nothing ToDo
                    // Magical page will remain open for everyone
                }
                else
                {
                    // Every other condition is not allowed
                    status_header( 403);
                    exit;
                }
            }
        }

        // now if arrived here just check for blocked urls list
        $alert = get_option('wpasl-alert-logging', false);

        // check if alert logging is on
        if($alert=="1")
        {
            // get blocked ips list
            $urls = get_option('wpasl-sus-urls', false);

            // check if urls are set
            if($urls)
            {
                // flag to be used when sending email
                $isUrl = false;

                // explode urls
                $urls = explode("\r\n", $urls);

                // quick method to check if url exists
                if(in_array($curr_url, $urls))
                {
                    $isUrl = true;
                }

                // if above method is failed do deep search
                if(!$isUrl)
                {
                    // check each url individually
                    foreach($urls as $url)
                    {
                        if($url=="")
                            continue;

                        // if match found stop loop
                        if(strpos($curr_url, $url)!==FALSE)
                        {
                            $isUrl = true;
                            break;
                        }
                    }
                }

                // if url is detected send alert
                if($isUrl)
                {
                    // get emails to send alert
                    $emails = get_option('wpasl-alert-emails', false);

                    // explode emails
                    $emails = explode(",", $emails);

                    // prepare default alert message
                    $browser = WPASL_DBSchema::getBrowser();
                    $message = $curr_ip.' has accessed '.get_site_url().'/'.$curr_url.' from '.$browser['platform'];
                    $message .= "\r\n\r\n USER_AGENT: ".$browser['userAgent'];

                    // check if any login user has accessed
                    if(is_user_logged_in())
                    {
                        // get current user info
                        $user = wp_get_current_user();
                        $message =
                        '
                            '.$user->user_login.' has accessed https://'.get_site_url().'/'.$curr_url.'
                        ';
                    }

                    wp_mail($emails,"Suspicious URL Alert", $message);
                }
            }
        }
    }

    /**
     * Function to manage log deletion
     * @return bool
     */
    private static function autoDeleteLog()
    {
        // global objects
        global $table_prefix, $wpdb;

        // get log days
        $days = get_option('wpasl-log-days', 30);

        // if unlimited simply ignore
        if($days<0)
        {
            return false;
        }

        $sql = "DELETE FROM ".$table_prefix."wpasl_log WHERE datediff(CURDATE(),`datetime`)>=".$days.";";
        $wpdb->query($sql);
    }
}