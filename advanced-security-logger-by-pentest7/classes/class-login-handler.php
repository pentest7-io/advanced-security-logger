<?php
/**
 * Class WPASL_LoginHandler
 * This class is responsible for dealing with various login related events which requires new login url instead of old.
 */
class WPASL_LoginHandler
{
    /**
     * This function will be used as register in bootstrap file of plugin
     */
    public static function register()
    {
        // function to deal with login page actions
        add_action("plugins_loaded",[self::class,'checkLoginPage'],1);
        // filter logout url
        add_filter('logout_url',[self::class,'changeLogoutUrl'], 10, 2);
        // filter login url
        add_filter('login_url',[self::class,'changeLoginUrl'], 10, 3 );
        // filter site url
        add_filter('site_url',[self::class,'filterSiteAndNetworkUrl'], 10, 4 );
        // filter network site url
        // add_filter( 'network_site_url',[self::class,'filterSiteAndNetworkUrl'], 10, 3 );
    }

    /**
     * This function is connected with action and check and prevent default login page
     */
    public static function checkLoginPage()
    {
        // access globals
        global $pagenow;

        // get from settings
        $islogincheck   = get_option('wpasl-hide-login', true);
        $newslug        = get_option('wpasl-login-slug', true);

        // check if login is hidden
        if($islogincheck=="1")
        {
            // verify if current url is to access login page
            if(strpos($_SERVER["REQUEST_URI"],$newslug)!==FALSE)
            {
                // do check login page
                WPASL_UrlLogger::preventOrAlert();

                $pagenow = 'wp-login.php';
                @require_once ABSPATH . 'wp-login.php';
                die;
            }

            // deny access when logging in through wp-admin or wp-login.php
            else if
            (
            (
                strpos($_SERVER["REQUEST_URI"],"wp-login.php")!==FALSE ||
                (strpos($_SERVER["REQUEST_URI"],"wp-admin")!==FALSE && !is_user_logged_in())
            ) /*&&
                !(isset($_POST["wp-submit"]))*/
            )
            {
                status_header( 404 );
                exit;
            }
        }
    }

    /**
     * This function will filter and replace default logout url with custom slug
     * @param $logout_url
     * @param $redirect
     * @return mixed
     */
    public static function changeLogoutUrl($logout_url, $redirect)
    {
        $islogincheck   = get_option('wpasl-hide-login', true);
        $newslug        = get_option('wpasl-login-slug', true);
        if($islogincheck=="1")
        {
            $logout_url = str_replace('wp-login.php',$newslug,$logout_url);
        }
        return $logout_url;
    }

    /**
     * This function will filter login url and replace it with new one
     * @param $url
     * @param $redirect
     * @param $force_reauth
     * @return array|string
     */
    public static function changeLoginUrl($url, $redirect, $force_reauth)
    {

        return self::makeNewUrl($url);
    }

    /**
     * This function will filter login url and replace it with new one in site_url or site_network_url filters
     * @param $url
     * @param $path
     * @param $scheme
     * @param string $blog_id
     * @return array|string
     */
    public static function filterSiteAndNetworkUrl($url, $path, $scheme, $blog_id = '')
    {
        return self::makeNewUrl($url);
    }

    /**
     * This function will take old url as input and replace it with new url. It is being used in multiple filter functions.
     * @param $old_url
     * @return array|string
     */
    private static function makeNewUrl($old_url)
    {
        $islogincheck   = get_option('wpasl-hide-login', true);
        $newslug        = get_option('wpasl-login-slug', true);

        if($islogincheck=="1")
        {
            if(strpos($old_url,"wp-login.php")!==FALSE )
            {
                if(strpos($old_url,"?")!==FALSE )
                {
                    $old_url      = explode("?",$old_url);
                    $old_url      = get_site_url()."/".$newslug."/?".$old_url[1];
                }
                else
                {
                    $old_url      = get_site_url()."/".$newslug;
                }
            }
        }
        return $old_url;
    }
}